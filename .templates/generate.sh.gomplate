{{- $folder := getenv "FOLDER" -}}
{{- $L := (datasource "language") -}}

{{- define "DELETE" }}
{{- $folder := getenv "FOLDER" -}}
if [ -f "{{ path.Join $folder . }}" ]
then
  rm "{{ path.Join $folder . }}"
fi
{{- end -}}

{{- define "GENERATE" }}
{{- $folder := getenv "FOLDER" -}}
{{- $in := .out -}}
{{- if has . "in" -}}{{ $in = .in }}{{ end }}
{{- $file := path.Join $folder .out -}}
echo -n  "generating" {{ $file }}
cat .templates/{{ $in }}.gomplate | $gomplate > {{ $file }}
if [ -s "{{ $file }}" ]
then
  echo " - Done"
else
  echo " - empty"
  rm -f {{ $file }}
fi
{{- end -}}

#!/bin/bash

set -e
set -o pipefail

trap 'docker rm -f gomplate-container >/dev/null' EXIT INT TERM

docker run --rm --name gomplate-container -d --entrypoint "" -v $PWD/{{ $folder }}/language.yaml:/language.yaml:ro -v $PWD/.templates/.devcontainer/vscode.default.settings.json:/vscode.default.settings.json:ro hairyhenderson/gomplate:alpine sh -c 'while [ true ] ; do sleep 10 ; echo "PING" ; done'

gomplate="docker exec -i -e GOMPLATE_SUPPRESS_EMPTY=true -e FOLDER={{ $folder }} gomplate-container gomplate -d language=/language.yaml -d vscodesettings=/vscode.default.settings.json -f -"

mkdir -p .github/workflows

{{ $github := conv.Join (coll.Slice "../.github/workflows/" $folder ".yml") "" -}}
{{ tmpl.Exec "DELETE" $github }}
{{ tmpl.Exec "GENERATE" (dict "in" "workflow.yml" "out" $github) }}

mkdir -p {{ $folder }}/.devcontainer

{{ tmpl.Exec "DELETE" ".devcontainer/cont.sh" }}
{{ tmpl.Exec "GENERATE" (dict "out" ".devcontainer/cont.sh") }}

{{ tmpl.Exec "DELETE" ".devcontainer/disclaimer.sh" }}
{{ tmpl.Exec "GENERATE" (dict "out" ".devcontainer/disclaimer.sh") }}

{{ tmpl.Exec "DELETE" ".devcontainer/devcontainer.json" }}
{{ tmpl.Exec "GENERATE" (dict "out" ".devcontainer/devcontainer.json") }}

{{ tmpl.Exec "DELETE" ".devcontainer/Dockerfile" }}
{{ tmpl.Exec "GENERATE" (dict "out" ".devcontainer/Dockerfile") }}

{{ tmpl.Exec "DELETE" ".devcontainer/selftest.sh" }}
{{ tmpl.Exec "GENERATE" (dict "out" ".devcontainer/selftest.sh") }}

mkdir -p {{ $folder }}/.vscode

{{ tmpl.Exec "DELETE" ".vscode/tasks.json" }}
{{ tmpl.Exec "GENERATE" (dict "out" ".vscode/tasks.json") }}

{{ tmpl.Exec "DELETE" ".vscode/vscode.code-snippets" }}
{{ tmpl.Exec "GENERATE" (dict "out" ".vscode/vscode.code-snippets") }}

if [ -z "$DEBUG" ]
then
  rm $0
fi
